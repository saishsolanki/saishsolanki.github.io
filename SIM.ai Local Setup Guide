# SIM.ai Local Setup Guide for Beginners (Kali Linux)

This guide will walk you through installing and running SIM.ai on a fresh Kali Linux machine, step by step. No prior technical knowledge is required!

---

## 1. **Update Your System**

Open your terminal (press `Ctrl+Alt+T`).

```bash
sudo apt update && sudo apt upgrade -y
```

---

## 2. **Install Required Software**

### a. **Install Git**

```bash
sudo apt install git -y
```

### b. **Install Docker**

```bash
sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io -y
```

### c. **Install Docker Compose**

```bash
sudo apt install docker-compose -y
```

### d. **Start Docker**

```bash
sudo systemctl start docker
sudo systemctl enable docker
```

---

## 3. **Get the SIM.ai Code**

```bash
git clone https://github.com/simstudioai/sim.git
cd sim
```

---

## 4. **Set Up Environment Variables**

SIM needs a special file called `.env` with secret values.  
Let’s make it step by step.

### a. **Go to the SIM app folder**

```bash
cd apps/sim
```

### b. **Copy the example file**

```bash
cp .env.example .env
```

### c. **Open `.env` in a text editor**

```bash
nano .env
```
(If `nano` is not installed: `sudo apt install nano -y`)

### d. **Edit the required values**

- **Database:** Keep the default.
  ```
  DATABASE_URL="postgresql://postgres:password@localhost:5432/postgres"
  ```
- **Generate three strong secrets:**  
  In a new terminal, run **three times**:
  ```bash
  openssl rand -hex 32
  ```
  Copy each output.

- **Paste your secrets** in `.env`:
  ```
  BETTER_AUTH_SECRET=paste_first_secret_here
  ENCRYPTION_KEY=paste_second_secret_here
  INTERNAL_API_SECRET=paste_third_secret_here
  ```
- **Set the app URL:**
  ```
  BETTER_AUTH_URL=http://localhost:3000
  NEXT_PUBLIC_APP_URL=http://localhost:3000
  ```

- **Google Integration (optional):**  
  If you want to use Gmail, Drive, etc, see the section **"Set Up Google Integration"** below.

- **Save:** In `nano`, press `Ctrl+O`, then press `Enter`, then `Ctrl+X` to exit.

---

## 5. **Return to Main SIM Folder**

```bash
cd ../../
```

---

## 6. **(OPTIONAL) Change or Add Ollama AI Models**

By default, SIM will use the `gemma:4b` model via Ollama.  
You can use other open-source models supported by [Ollama](https://ollama.com/library) (like `llama2`, `phi3`, `mistral`, etc).

**To do this:**

### a. **Open the Docker Compose file for Ollama in a text editor:**

```bash
nano docker-compose.ollama.yml
```

### b. **Find the OLLAMA_MODELS section**

You will see a section like:
```yaml
      OLLAMA_MODELS: gemma:4b
```

You can change `"gemma:4b"` to any model you want from the [Ollama library](https://ollama.com/library), or add several models separated by new lines, for example:
```yaml
      OLLAMA_MODELS: |
        llama2
        phi3
        mistral
```

**Tip:**  
- Each model name should match exactly what Ollama supports (e.g. `llama2`, `mistral`, `phi3`, `gemma:4b`).
- Multiple models can be listed, one per line, using the `|` character as above.

### c. **Save and exit**  
- In nano: `Ctrl+O` (save), then `Enter`, then `Ctrl+X` (exit).

---

## 7. **Start SIM with Docker Compose**

This will download everything and start SIM (including the models you specified):

```bash
docker compose -f docker-compose.ollama.yml --profile setup up -d
```

- The first time, it will download the AI models you chose. This may take a while depending on your internet speed and number of models.

---

## 8. **Access SIM in Your Browser**

- Open Firefox or Chrome.
- Go to: [http://localhost:3000](http://localhost:3000)
- You should see the SIM interface!

---

## 9. **Set Up Google Integration (Optional, For Gmail, Drive, etc.)**

If you want SIM to connect to your Google account for Gmail, Drive, Docs, etc:

### a. **Create a Google Cloud Project**

1. Go to [Google Cloud Console](https://console.cloud.google.com/).
2. Create a new project.

### b. **Set Up OAuth Consent Screen**

- APIs & Services > OAuth consent screen
- Fill in required info (App name, email, etc.)
- Add `http://localhost:3000` as an authorized domain.

### c. **Create OAuth Credentials**

- APIs & Services > Credentials > Create Credentials > OAuth client ID
- App type: Web application
- Name: SIM Local Dev
- Authorized redirect URI: `http://localhost:3000/api/auth/callback/google`
- Save. Copy the client ID and client secret.

### d. **Add to Your `.env` File**

Go back to `apps/sim/.env` and add:

```
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
```

Restart Docker:

```bash
docker compose -f docker-compose.ollama.yml --profile setup down
docker compose -f docker-compose.ollama.yml --profile setup up -d
```

---

## 10. **Troubleshooting**

- To check containers and logs:
  ```bash
  docker compose ps
  docker compose logs
  ```
- If you edit `.env` or `docker-compose.ollama.yml`, always restart Docker Compose!

---

## 11. **Security Notes**

- Never share your secret keys or `.env` file.
- For production or public use, read SIM’s documentation for advanced configuration.

---

**You’re done! Enjoy your local SIM setup with your chosen AI models.**

If you run into issues, come back to this guide or ask for help on the [SIM GitHub Discussions](https://github.com/simstudioai/sim/discussions).
